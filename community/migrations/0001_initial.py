# Generated by Django 3.0.7 on 2020-06-27 16:07

import community.models
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_countries.fields
import djmoney.models.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('authentic', models.BooleanField(default=False)),
                ('traderlevel', models.CharField(choices=[('Beginner', 'Beginner'), ('Intermediate', 'Intermediate'), ('Advanced', 'Advanced'), ('Expert', 'Expert'), ('ProTrader', 'ProTrader')], default='Beginner', max_length=12)),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female')], default='Male', max_length=6)),
                ('name', models.CharField(blank=True, max_length=30)),
                ('image', models.ImageField(blank=True, upload_to='community/images/userpfp/', validators=[community.models.validate_image])),
                ('bio', models.CharField(blank=True, max_length=300)),
                ('country', django_countries.fields.CountryField(blank=True, max_length=2)),
                ('instagram', models.URLField(blank=True)),
                ('dateregistered', models.DateTimeField(auto_now_add=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Trade',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pair', models.CharField(choices=[('EUR_USD', 'EUR_USD'), ('GBP_USD', 'GBP_USD'), ('USD_JPY', 'USD_JPY'), ('AUD_USD', 'AUD_USD'), ('NZD_USD', 'NZD_USD'), ('USD_CAD', 'USD_CAD'), ('USD_CHF', 'USD_CHF'), ('EUR_GBP', 'EUR_GBP'), ('GBP_JPY', 'GBP_JPY'), ('AUD_GBP', 'AUD_GBP'), ('GBP_NZD', 'GBP_NZD'), ('GBP_CAD', 'GBP_CAD'), ('GBP_CHF', 'GBP_CHF'), ('EUR_JPY', 'EUR_JPY'), ('EUR_AUD', 'EUR_AUD'), ('EUR_NZD', 'EUR_NZD'), ('EUR_CAD', 'EUR_CAD'), ('EUR_CHF', 'EUR_CHF'), ('AUD_JPY', 'AUD_JPY'), ('AUD_NZD', 'AUD_NZD'), ('AUD_CAD', 'AUD_CAD'), ('AUD_CHF', 'AUD_CHF'), ('CAD_JPY', 'CAD_JPY'), ('NZD_CAD', 'NZD_CAD'), ('CAD_CHF', 'CAD_CHF'), ('NZD_JPY', 'NZD_JPY'), ('NZD_CHF', 'NZD_CHF'), ('CHF_JPY', 'CHF_JPY'), ('XAU_USD', 'XAU_USD'), ('XBT_USD', 'XBT_USD'), ('XNG_USD', 'XNG_USD'), ('XTI_USD', 'XTI_USD'), ('BTC_USD', 'BTC_USD')], default='EUR_USD', max_length=10)),
                ('description', models.CharField(blank=True, max_length=100)),
                ('pips', models.PositiveSmallIntegerField(blank=True, default=1, null=True, validators=[django.core.validators.MaxValueValidator(5000)])),
                ('amount_currency', djmoney.models.fields.CurrencyField(choices=[('EUR', 'EUR'), ('USD', 'USD'), ('GBP', 'GBP')], default='USD', editable=False, max_length=3)),
                ('amount', djmoney.models.fields.MoneyField(blank=True, currency_choices=(('EUR', 'EUR'), ('USD', 'USD'), ('GBP', 'GBP')), decimal_places=0, default_currency='USD', max_digits=7, null=True)),
                ('winlose', models.CharField(choices=[('WIN', 'WIN'), ('LOSE', 'LOSE'), ('BE', 'BE')], max_length=4)),
                ('lotsize', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0.01)])),
                ('openedpositionon', models.DateField(default=django.utils.timezone.now)),
                ('image', models.ImageField(upload_to='community/images/trades/', validators=[community.models.validate_image])),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
